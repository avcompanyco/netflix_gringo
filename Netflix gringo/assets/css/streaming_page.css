/* Variables are now primarily in brand_styles.css */
/* Page-specific variables can remain if necessary, but most common ones are removed. */
:root {
    /* Example of keeping a page-specific var if needed, most are gone */
    --container-padding: 1.5rem;
}


body {
    /* font-family, background-color, color are inherited from brand_styles.css */
    margin: 0; /* Kept as it's a reset */
    padding: 0; /* Kept as it's a reset */
    display: flex; /* Layout specific */
    flex-direction: column; /* Layout specific */
    min-height: 100vh; /* Layout specific */
}

.streaming-container {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    max-width: 1200px; /* Max width for the page */
    margin: 0 auto;
    width: 100%;
}

.streaming-header {
    background-color: rgba(0,0,0,0.2);
    padding: 0.75rem var(--container-padding);
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgba(255,255,255,0.1);
}

.streaming-header h1 {
    font-size: 1.5rem;
    margin: 0;
    color: var(--primary-color);
}

.back-link {
    color: var(--secondary-color);
    text-decoration: none;
    font-size: 0.9rem;
}
.back-link:hover {
    text-decoration: underline;
}

.main-content-area {
    flex: 1; /* Takes up available space */
    padding: var(--container-padding);
    display: flex;
    flex-direction: column;
    align-items: center; /* Center video and controls */
}

.video-area {
    width: 100%;
    max-width: 800px; /* Max width for video */
    background-color: var(--main-bg); /* Using variable */
    position: relative;
    border-radius: var(--border-radius-md); /* Use brand variable */
    overflow: hidden;
    margin-bottom: 1rem;
    aspect-ratio: 16 / 9; /* Maintain aspect ratio */
    border: 1px solid var(--border-color-darkbg); /* Added border */
}

#localVideoStream {
    width: 100%;
    height: 100%;
    display: block; /* Remove extra space below video */
    object-fit: cover; /* Cover the area, might crop */
}

.video-placeholder-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.8); /* Darker for more contrast */
    color: var(--text-light);
    text-align: center;
    padding: 2rem;
    z-index: 1;
    border-radius: var(--border-radius-sm);
}
.video-placeholder-overlay p {
    margin: 0.5rem 0;
    font-size: 1rem; /* Base text size */
    line-height: 1.5;
}
.video-placeholder-overlay p:first-child {
    font-weight: var(--font-weight-semibold); /* More emphasis */
    font-size: 1.2rem; /* Slightly larger */
    color: var(--text-headings);
}


.stream-controls {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.75rem;
    padding: 1rem;
    background-color: rgba(0,0,0,0.1);
    border-radius: var(--border-radius-md); /* Using variable */
    width: 100%;
    max-width: 800px; /* Match video area width */
    margin-bottom: var(--container-padding); /* Space before chat or bottom */
}

/* .control-btn styles are removed as .btn classes from brand_styles.css are used directly in HTML */
/* Specific .start, .stop, .mic, .cam classes for background are also removed. */
/* Hover and disabled states are handled by .btn and .btn:disabled from brand_styles.css */
/* Added style for toggled-off state */
.stream-controls .btn.toggled-off {
    background-color: var(--danger-color);
    border-color: var(--danger-color-hover);
}
.stream-controls .btn.toggled-off:hover {
    background-color: var(--danger-color-hover);
}


.chat-area {
    background-color: var(--card-bg-dark);
    padding: var(--container-padding);
    border-top: 1px solid var(--border-color-darkbg);
    width: 100%;
    max-width: 400px;
    margin: 0 auto var(--container-padding) auto;
    border-radius: var(--border-radius-md);
    display: flex;
    flex-direction: column;
    max-height: 400px; /* Consider if this is still needed or if flex properties handle height well */
}

.chat-area h3 {
    font-size: 1.25rem; /* Slightly larger for section title */
    margin-top: 0;
    margin-bottom: 1rem;
    color: var(--text-headings); /* More standard heading color */
    text-align: center;
    padding-bottom: 0.75rem; /* Increased padding */
    border-bottom: 1px solid var(--border-color-darkbg);
}

.chat-messages-display {
    flex-grow: 1;
    overflow-y: auto;
    margin-bottom: 1rem;
    padding: 0.5rem; /* Adjusted for bubble padding */
    background-color: var(--main-bg); /* Match page background for seamless look */
    border-radius: var(--border-radius-sm);
    min-height: 150px;
}

/* Chat Message Bubbles - Refined */
.chat-message {
    padding: 0.6rem 1rem; /* Slightly more padding */
    border-radius: var(--border-radius-lg);
    margin-bottom: 0.75rem;
    max-width: 90%; /* Allow slightly wider bubbles */
    word-wrap: break-word;
    line-height: 1.45; /* Improved line height */
    font-size: 0.9rem; /* Base message text size */
}
.chat-message strong { /* Sender's name */
    display: block;
    font-weight: var(--font-weight-semibold); /* Bolder sender name */
    margin-bottom: 0.25rem; /* More space after name */
    font-size: 0.85rem; /* Slightly larger sender name */
    opacity: 0.9;
}

.self-message {
    background-color: var(--primary-color);
    color: white;
    margin-left: auto;
    border-bottom-right-radius: var(--border-radius-sm);
}
.self-message strong {
    color: rgba(255,255,255,0.9);
}

.other-message {
    background-color: var(--card-bg-dark); /* Use a defined card background */
    color: var(--text-light);
    margin-right: auto;
    border-bottom-left-radius: var(--border-radius-sm);
}
.other-message strong {
    color: var(--secondary-color); /* Using secondary color for other users' names */
}


.chat-input-area {
    display: flex;
    gap: 0.75rem;
}

#chatMessageInput {
    flex-grow: 1;
    padding: 0.75rem 1rem;
    border: 1px solid var(--border-color-darkbg);
    border-radius: var(--border-radius-md);
    background-color: var(--section-bg-dark-transparent); /* Slightly offset from main bg */
    color: var(--text-light);
    font-size: 0.95rem;
}
#chatMessageInput:focus {
    border-color: var(--primary-color);
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba(var(--primary-rgb, 240, 98, 146), 0.35); /* Slightly more prominent shadow */
}
#chatMessageInput::placeholder {
    color: var(--text-muted);
}

/* #sendChatMessageBtn styles are removed as .btn .btn-primary are used directly in HTML */

/* Responsive adjustments */
@media (min-width: 768px) {
    .streaming-container {
        flex-direction: row; /* Side-by-side layout on larger screens */
    }
    .main-content-area {
        flex: 3; /* Video area takes more space */
        padding-right: 0; /* Remove padding if chat is next to it */
        align-items: flex-start; /* Align items to the start */
    }
    .chat-area {
        flex: 1; /* Chat area takes less space */
        margin: var(--container-padding); /* Add margin around chat */
        border-top: none; /* Remove top border if side by side */
        border-left: 1px solid rgba(255,255,255,0.1); /* Add left border */
        max-height: none; /* Allow chat to take full height of its container */
        height: calc(100vh - 2 * var(--container-padding) - 50px); /* Adjust height based on header, approximate */
    }
     .stream-controls, .video-area {
        margin-left:0; /* Align to left in its container */
     }
}

@media (max-width: 767px) {
    .stream-controls {
        margin-bottom: 1rem; /* Ensure spacing between controls and chat on mobile */
    }
    .chat-area {
         /* No specific max-height rule here now, relying on flex behavior or overall page structure */
    }
}
